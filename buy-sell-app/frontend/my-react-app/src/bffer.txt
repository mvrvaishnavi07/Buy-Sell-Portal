// import React, { useEffect, useState } from "react";
// import axios from "axios";
// import { useNavigate } from "react-router-dom";

// const Profile = () => {
//   const [profile, setProfile] = useState(null);
//   const [editMode, setEditMode] = useState(false);
//   const [updatedProfile, setUpdatedProfile] = useState({});
//   const navigate = useNavigate();

//   // Fetching the user's profile data from API
//   useEffect(() => {
//     const fetchProfile = async () => {
//       try {
//         const token = localStorage.getItem("token");
//         const res = await axios.get("http://localhost:5000/api/auth/profile", {
//           headers: { Authorization: `Bearer ${token}` },
//         });
//         setProfile(res.data);
//         setUpdatedProfile(res.data); // Initialize updated profile state
//       } catch (err) {
//         console.error(err);
//       }
//     };

//     fetchProfile();
//   }, []);

//   if (!profile) return <p>Unauthorized Access or Loading...</p>;

//   // Handle logout
//   const handleLogout = () => {
//     localStorage.removeItem("token"); // Clear token from localStorage
//     navigate("/login"); // Redirect to login page
//   };

//   // Handle profile update
//   const handleUpdateProfile = async () => {
//     try {
//       const token = localStorage.getItem("token");
//       const res = await axios.put(
//         "http://localhost:5000/api/auth/profile",
//         updatedProfile,
//         {
//           headers: { Authorization: `Bearer ${token}` },
//         }
//       );
//       setProfile(updatedProfile); // Update the displayed profile with updated data
//       setEditMode(false); // Exit edit mode
//     } catch (err) {
//       console.error(err);
//     }
//   };

//   return (
//     <div>
//       <h2>Welcome, {profile.firstName}</h2>
//       {editMode ? (
//         <div>
//           <div>
//             <label>First Name:</label>
//             <input
//               type="text"
//               value={updatedProfile.firstName}
//               onChange={(e) =>
//                 setUpdatedProfile({ ...updatedProfile, firstName: e.target.value })
//               }
//             />
//           </div>
//           <div>
//             <label>Email:</label>
//             <input
//               type="email"
//               value={updatedProfile.email}
//               onChange={(e) =>
//                 setUpdatedProfile({ ...updatedProfile, email: e.target.value })
//               }
//             />
//           </div>
//           <div>
//             <label>Age:</label>
//             <input
//               type="number"
//               value={updatedProfile.age}
//               onChange={(e) =>
//                 setUpdatedProfile({ ...updatedProfile, age: e.target.value })
//               }
//             />
//           </div>
//           <div>
//             <label>Contact Number:</label>
//             <input
//               type="text"
//               value={updatedProfile.contactNumber}
//               onChange={(e) =>
//                 setUpdatedProfile({ ...updatedProfile, contactNumber: e.target.value })
//               }
//             />
//           </div>
//           <button onClick={handleUpdateProfile}>Save Changes</button>
//           <button onClick={() => setEditMode(false)}>Cancel</button>
//         </div>
//       ) : (
//         <div>
//           <p>Email: {profile.email}</p>
//           <p>Age: {profile.age}</p>
//           <p>Contact: {profile.contactNumber}</p>
//           <button onClick={() => setEditMode(true)}>Edit Profile</button>
//         </div>
//       )}
//       <button onClick={handleLogout}>Logout</button>
//     </div>
//   );
// };

// export default Profile;


 3) frontend/my-react-app/src/pages/LandingPage.jsx :
 import React from "react";
import { Container, Typography, Button } from "@mui/material";
import { useNavigate } from "react-router-dom";

const LandingPage = () => {
  const navigate = useNavigate();

  return (
    <Container
      maxWidth="md"
      sx={{ textAlign: "center", marginTop: "120px" }}
    >
      <Typography variant="h3" gutterBottom>
        Welcome to the Buy-Sell Portal
      </Typography>
      <Button
        variant="contained"
        color="primary"
        sx={{ margin: 1 }}
        onClick={() => navigate("/register")}
      >
        Register
      </Button>
      <Button
        variant="outlined"
        color="primary"
        sx={{ margin: 1 }}
        onClick={() => navigate("/login")}
      >
        Login
      </Button>
    </Container>
  );
};

export default LandingPage;

6) frontend/my-react-app/src/pages/Profile.jsx :


import React, { useEffect, useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import {
  Container,
  Card,
  CardContent,
  Typography,
  Button,
  TextField,
  Box,
  Stack,
} from "@mui/material";

const Profile = () => {
  const [profile, setProfile] = useState(null);
  const [editMode, setEditMode] = useState(false);
  const [updatedProfile, setUpdatedProfile] = useState({});
  const navigate = useNavigate();

  useEffect(() => {
    const fetchProfile = async () => {
      try {
        const token = localStorage.getItem("token");
        const res = await axios.get("http://localhost:5000/api/auth/profile", {
          headers: { Authorization: `Bearer ${token}` },
        });
        setProfile(res.data);
        setUpdatedProfile(res.data);
      } catch (err) {
        console.error(err);
      }
    };

    fetchProfile();
  }, []);

  if (!profile) return <Typography>Unauthorized Access or Loading...</Typography>;

  const handleLogout = () => {
    localStorage.removeItem("token");
    navigate("/login");
  };

  const handleUpdateProfile = async () => {
    try {
      const token = localStorage.getItem("token");
      await axios.put("http://localhost:5000/api/auth/profile", updatedProfile, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setProfile(updatedProfile);
      setEditMode(false);
    } catch (err) {
      console.error(err);
    }
  };

  return (
    <Container maxWidth="sm" sx={{ marginTop: "120px" }}>
      <Card>
        <CardContent>
          <Typography variant="h4" gutterBottom>
            Welcome, {profile.firstName}
          </Typography>
          {editMode ? (
            <Box component="form" noValidate autoComplete="off" sx={{ mt: 2 }}>
              <Stack spacing={2}>
                <TextField
                  label="First Name"
                  value={updatedProfile.firstName || ""}
                  onChange={(e) =>
                    setUpdatedProfile({
                      ...updatedProfile,
                      firstName: e.target.value,
                    })
                  }
                  fullWidth
                />
                <TextField
                  label="Email"
                  type="email"
                  value={updatedProfile.email || ""}
                  onChange={(e) =>
                    setUpdatedProfile({
                      ...updatedProfile,
                      email: e.target.value,
                    })
                  }
                  fullWidth
                />
                <TextField
                  label="Age"
                  type="number"
                  value={updatedProfile.age || ""}
                  onChange={(e) =>
                    setUpdatedProfile({
                      ...updatedProfile,
                      age: e.target.value,
                    })
                  }
                  fullWidth
                />
                <TextField
                  label="Contact Number"
                  value={updatedProfile.contactNumber || ""}
                  onChange={(e) =>
                    setUpdatedProfile({
                      ...updatedProfile,
                      contactNumber: e.target.value,
                    })
                  }
                  fullWidth
                />
              </Stack>
              <Stack direction="row" spacing={2} sx={{ mt: 2 }}>
                <Button variant="contained" color="primary" onClick={handleUpdateProfile}>
                  Save Changes
                </Button>
                <Button variant="outlined" color="secondary" onClick={() => setEditMode(false)}>
                  Cancel
                </Button>
              </Stack>
            </Box>
          ) : (
            <Box sx={{ mt: 2 }}>
              <Typography variant="body1">Email: {profile.email}</Typography>
              <Typography variant="body1">Age: {profile.age}</Typography>
              <Typography variant="body1">Contact: {profile.contactNumber}</Typography>
              <Stack direction="row" spacing={2} sx={{ mt: 2 }}>
                <Button
                  variant="contained"
                  color="primary"
                  onClick={() => setEditMode(true)}
                >
                  Edit Profile
                </Button>
                <Button variant="outlined" color="error" onClick={handleLogout}>
                  Logout
                </Button>
              </Stack>
            </Box>
          )}
        </CardContent>
      </Card>
    </Container>
  );
};

export default Profile;


3)frontend/my-react-app/src/pages/Login.jsx : 
import React, { useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import {
  Container,
  TextField,
  Button,
  Typography,
  Alert,
  Box,
} from "@mui/material";

const Login = () => {
  const [credentials, setCredentials] = useState({ email: "", password: "" });
  const [error, setError] = useState("");
  const navigate = useNavigate();

  const handleChange = (e) => {
    setCredentials({ ...credentials, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await axios.post("http://localhost:5000/api/auth/login", credentials);
      if (res.status === 200) {
        localStorage.setItem("token", res.data.token);
        navigate("/dashboard");
      }
    } catch (err) {
      setError(err.response?.data?.message || "Login Failed");
    }
  };

  return (
    <Container
      maxWidth="sm"
      sx={{
        height: "100vh", // Full viewport height
        display: "flex",
        flexDirection: "column",
        justifyContent: "center",
        alignItems: "center",
      }}
    >
      <Box>
        <Typography variant="h4" gutterBottom align="center">
          Login
        </Typography>

        {error && (
          <Alert severity="error" sx={{ mb: 2 }}>
            {error}
          </Alert>
        )}

        <Box component="form" onSubmit={handleSubmit} noValidate sx={{ mt: 2 }}>
          {/* Email Field */}
          <TextField
            fullWidth
            label="Email"
            type="email"
            name="email"
            value={credentials.email}
            onChange={handleChange}
            variant="outlined"
            margin="normal"
            required
          />

          {/* Password Field */}
          <TextField
            fullWidth
            label="Password"
            type="password"
            name="password"
            value={credentials.password}
            onChange={handleChange}
            variant="outlined"
            margin="normal"
            required
          />

          {/* Submit Button */}
          <Button
            type="submit"
            fullWidth
            variant="contained"
            color="primary"
            sx={{ mt: 3 }}
          >
            Login
          </Button>
        </Box>
      </Box>
    </Container>
  );
};

export default Login;
4) frontend/my-react-app/src/pages/Register.jsx :
import React, { useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import {
  Box,
  TextField,
  Button,
  Typography,
  Alert,
  Container,
  Grid,
} from "@mui/material";

const Register = () => {
  const [formData, setFormData] = useState({
    firstName: "",
    lastName: "",
    email: "",
    age: "",
    contactNumber: "",
    password: "",
  });
  const [error, setError] = useState("");
  const navigate = useNavigate();

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await axios.post(
        "http://localhost:5000/api/auth/register",
        formData
      );
      if (res.status === 201) {
        navigate("/login");
      }
    } catch (err) {
      setError(err.response.data.message || "Registration Failed");
    }
  };

  return (
    <Container maxWidth="sm" sx={{ mt: 8 }}>
      <Box
        sx={{
          boxShadow: 3,
          p: 4,
          borderRadius: 2,
          backgroundColor: "background.paper",
        }}
      >
        <Typography variant="h4" component="h1" textAlign="center" gutterBottom>
          Register
        </Typography>
        {error && (
          <Alert severity="error" sx={{ mb: 2 }}>
            {error}
          </Alert>
        )}
        <form onSubmit={handleSubmit}>
          <Grid container spacing={2}>
            <Grid item xs={12} sm={6}>
              <TextField
                label="First Name"
                name="firstName"
                fullWidth
                variant="outlined"
                value={formData.firstName}
                onChange={handleChange}
                required
              />
            </Grid>
            <Grid item xs={12} sm={6}>
              <TextField
                label="Last Name"
                name="lastName"
                fullWidth
                variant="outlined"
                value={formData.lastName}
                onChange={handleChange}
                required
              />
            </Grid>
            <Grid item xs={12}>
              <TextField
                label="IIIT Email"
                name="email"
                type="email"
                fullWidth
                variant="outlined"
                value={formData.email}
                onChange={handleChange}
                required
              />
            </Grid>
            <Grid item xs={12}>
              <TextField
                label="Age"
                name="age"
                type="number"
                fullWidth
                variant="outlined"
                value={formData.age}
                onChange={handleChange}
                required
              />
            </Grid>
            <Grid item xs={12}>
              <TextField
                label="Contact Number"
                name="contactNumber"
                fullWidth
                variant="outlined"
                value={formData.contactNumber}
                onChange={handleChange}
                required
              />
            </Grid>
            <Grid item xs={12}>
              <TextField
                label="Password"
                name="password"
                type="password"
                fullWidth
                variant="outlined"
                value={formData.password}
                onChange={handleChange}
                required
              />
            </Grid>
          </Grid>
          <Button
            type="submit"
            variant="contained"
            color="primary"
            fullWidth
            sx={{ mt: 3 }}
          >
            Register
          </Button>
        </form>
        <Typography
          variant="body2"
          color="textSecondary"
          align="center"
          sx={{ mt: 2 }}
        >
          Already have an account?{" "}
          <Button
            size="small"
            onClick={() => navigate("/login")}
            sx={{ textTransform: "none", p: 0 }}
          >
            Login here
          </Button>
        </Typography>
      </Box>
    </Container>
  );
};

export default Register;